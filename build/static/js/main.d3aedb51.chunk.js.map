{"version":3,"sources":["Header/Header.js","TransContex.js","Balance/Balance.js","TransactionHistory/TransactionHistory.js","NewTransaction/NewTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","TransContex","createContext","TransProvider","props","useState","trans","add_trans","Provider","value","children","Balance","useContext","income","expense","sum","i","length","parseInt","amount","undefined","TransactionHistory","dellItem","ind","splice","map","des","onClick","NewTransaction","set_des","set_amount","onSubmit","e","preventDefault","Handlechange","type","onChange","target","placeholder","aria-label","aria-describedby","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAYeA,EAVA,WACX,OACI,qBAAKC,UAAY,SAAjB,SAEI,qD,OCLCC,G,MAAcC,2BACdC,EAAgB,SAACC,GAC1B,MAAuBC,mBAAS,IAAhC,mBAAIC,EAAJ,KAAUC,EAAV,KACA,OACI,8BACI,cAACN,EAAYO,SAAb,CAAsBC,MAAS,CAACH,EAAMC,GAAtC,SACCH,EAAMM,cCsCJC,EAzCC,WAOd,IANA,MAAwBC,qBAAWX,GAAnC,mBAAKK,EAAL,KACIO,GADJ,KACc,GACVC,EAAW,EACXC,EAAM,EAGDC,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAC7BE,SAAUZ,EAAMU,GAAGG,OAAS,IAAK,IAClCN,GAASK,SAAUZ,EAAMU,GAAGG,OAAS,KAEpCD,SAAUZ,EAAMU,GAAGG,OAAS,IAAM,IACnCL,GAAUI,SAAUZ,EAAMU,GAAGG,OAAS,UAEjBC,IAApBd,EAAMU,GAAGG,SAEVJ,GAAMG,SAAUZ,EAAMU,GAAGG,OAAS,KAGtC,OACE,sBAAKnB,UAAU,UAAf,UACE,iDACA,uBACA,qBAAIA,UAAY,OAAhB,cAAyBe,KACzB,sBAAKf,UAAU,SAAf,UACE,gCACE,wCACA,qBAAIA,UAAY,QAAhB,cAA0Ba,QAG5B,qBAAKb,UAAY,OAEjB,gCACE,yCACA,qBAAIA,UAAY,MAAhB,cAAwBc,e,OCTnBO,G,MAzBY,WACzB,MAAyBT,qBAAWX,GAApC,mBAAKK,EAAL,KAAYC,EAAZ,KACA,SAASe,EAASC,GAChBjB,EAAMkB,OAAOD,EAAI,GACjBhB,EAAU,GAAD,mBAAKD,GAAL,CAAWA,KAEtB,OACE,sBAAKN,UAAU,UAAf,UACE,qDACA,uBACCM,EAAMmB,KAAI,SAACnB,EAAOiB,GACjB,GAAIjB,EAAMa,aAAwBC,IAAdd,EAAMoB,IACxB,OACE,sBAAe1B,UAAU,OAAzB,UACE,6BAAKM,EAAMoB,MACX,+BAAKpB,EAAMa,OAAX,QACA,wBAAQQ,QAAW,WAAKL,EAASC,IAAOvB,UAAU,MAAlD,sBAHQuB,WCoDPK,G,MAjEQ,WACrB,MAAqBvB,mBAAS,IAA9B,mBAAKqB,EAAL,KAAUG,EAAV,KACA,EAA2BxB,mBAAS,IAApC,mBAAKc,EAAL,KAAaW,EAAb,KACA,EAAwBlB,qBAAWX,GAAnC,mBAAKK,EAAL,KAAWC,EAAX,KAkBA,OACE,sBAAKP,UAAU,MAAf,UACE,qDACA,uBACA,sBAAKA,UAAU,OAAf,UACE,6CACA,uBAAM+B,SAAY,SAACC,IAtB3B,SAAsBA,GACpBA,EAAEC,kBACCP,GAAmB,KAAXP,IACTZ,EAAU,GAAD,mBAAKD,GAAL,CAAW,CAClBoB,IAAMA,EACNP,OAASA,MAKXU,EAAQ,IACRC,EAAW,IAWiBI,CAAaF,IAArC,UACE,sBAAKhC,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBACf,uBACEmC,KAAK,OACL1B,MAAOiB,EACPU,SAAU,SAACJ,GACTH,EAAQG,EAAEK,OAAO5B,QAEnBT,UAAU,eACVsC,YAAY,oBACZC,aAAW,WACXC,mBAAiB,oBAGrB,oDACA,sBAAKxC,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBACf,uBACEmC,KAAK,SACL1B,MAAOU,EACPiB,SAAU,SAACJ,GACTF,EAAWE,EAAEK,OAAO5B,QAEtBT,UAAU,eACVsC,YAAY,eACZC,aAAW,WACXC,mBAAiB,oBAGrB,wEACA,wBAAQL,KAAO,SAASnC,UAAU,OAAlC,wCC3CKyC,MAbf,WACE,OACE,qBAAKzC,UAAU,YAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCDO0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d3aedb51.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nconst Header = () => {\r\n    return (\r\n        <div className = \"Header\">\r\n            \r\n            <h1>Expense Tracker </h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{createContext,useState} from 'react'\r\nexport const TransContex = createContext()\r\nexport const TransProvider = (props)=>{\r\n    let[trans,add_trans] = useState([]);\r\n    return(\r\n        <div>\r\n            <TransContex.Provider value = {[trans,add_trans]}>\r\n            {props.children}\r\n        </TransContex.Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React,{useContext} from \"react\";\r\nimport \"./Balance.css\";\r\nimport {TransContex} from '../TransContex'\r\n\r\nconst Balance = () => {\r\n  let [trans,add_trans] = useContext(TransContex)\r\n  var income  = 0;\r\n  var expense =  0;\r\n  var sum = 0 ;\r\n\r\n  \r\n  for (let i = 0; i < trans.length; i++) {\r\n    if(parseInt((trans[i].amount), 10) >0 ){\r\n      income+= parseInt((trans[i].amount), 10)\r\n    }\r\n    if(parseInt((trans[i].amount), 10) < 0 ){\r\n      expense+= parseInt((trans[i].amount), 10)\r\n    }\r\n    if(trans[i].amount !== undefined){\r\n\r\n      sum+= parseInt((trans[i].amount), 10)\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"balance\">\r\n      <h2>Current Balance</h2>\r\n      <hr />\r\n      <h1 className = \"blue\">${sum}</h1>\r\n      <div className=\"income\">\r\n        <d1v>\r\n          <h5>Income</h5>\r\n          <h2 className = \"green\">${income}</h2>\r\n        </d1v>\r\n\r\n        <div className = \"v1\"></div>\r\n\r\n        <d1v>\r\n          <h5>Expense</h5>\r\n          <h2 className = \"red\">${expense}</h2>\r\n        </d1v>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport \"./TransactionHistory.css\";\r\nimport { TransContex } from \"../TransContex\";\r\n\r\nconst TransactionHistory = () => {\r\n  let [trans, add_trans] = useContext(TransContex);\r\n  function dellItem(ind){\r\n    trans.splice(ind,1)\r\n    add_trans([...trans,trans])\r\n  }\r\n  return (\r\n    <div className=\"history\">\r\n      <h2>Transaction History</h2>\r\n      <hr />\r\n      {trans.map((trans, ind) => {\r\n        if (trans.amount || trans.des !== undefined) {\r\n          return (\r\n            <div key={ind} className=\"data\">\r\n              <h3>{trans.des}</h3>\r\n              <h3>{trans.amount} $</h3>\r\n              <button onClick = {()=>{dellItem(ind)}} className=\"btn\">Delete</button>\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { useState,useContext } from \"react\";\r\nimport {TransContex} from '../TransContex'\r\nimport \"./NewTransaction.css\";\r\n\r\nconst NewTransaction = () => {\r\n  let [des, set_des] = useState(\"\");\r\n  let [amount, set_amount] = useState(\"\");\r\n  let [trans,add_trans] = useContext(TransContex)\r\n\r\nfunction Handlechange(e){\r\n  e.preventDefault()\r\n  if(des  || amount !== \"\"){\r\n    add_trans([...trans,{\r\n      des : des ,\r\n      amount : amount\r\n    }]);\r\n  }\r\n \r\n\r\n    set_des(\"\")\r\n    set_amount(\"\")\r\n  \r\n  \r\n}\r\n\r\n  return (\r\n    <div className=\"new\">\r\n      <h2>Add New Transaction</h2>\r\n      <hr />\r\n      <div className=\"farm\">\r\n        <h3>Description</h3>\r\n        <form onSubmit = {(e)=>{Handlechange(e)}}>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\"></div>\r\n            <input\r\n              type=\"text\"\r\n              value={des}\r\n              onChange={(e) => {\r\n                set_des(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Description\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n            />\r\n          </div>\r\n          <h3>Transaction Amount</h3>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\"></div>\r\n            <input\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={(e) => {\r\n                set_amount(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Enter Amount\"\r\n              aria-label=\"Username\"\r\n              aria-describedby=\"basic-addon1\"\r\n            />\r\n          </div>\r\n          <h5>(Add Income As +ve and Expense As -ve)</h5>\r\n          <button type = \"submit\" className=\"butn\">Add Transaction</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewTransaction;\r\n","import \"./App.css\";\r\nimport Header from \"./Header/Header\";\r\nimport Balance from \"./Balance/Balance\";\r\nimport TransactionHistory from \"./TransactionHistory/TransactionHistory\";\r\nimport NewTransaction from \"./NewTransaction/NewTransaction\";\r\nimport {TransProvider} from \"./TransContex\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"Container\">\r\n      <TransProvider>\r\n        <Header />\r\n        <Balance />\r\n        <TransactionHistory />\r\n        <NewTransaction />\r\n      </TransProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}